{"version":3,"sources":["Footer.js","App.js","index.js"],"names":["Footer","href","target","rel","i","App","props","getPreviousQuote","state","previousQuotes","length","setState","prevState","quote","author","slice","getNewQuote","random","Math","floor","api","text","setNewQuote","concat","twitterPostURL","encodeURIComponent","tumblrPostURL","fetch","then","a","json","data","className","id","style","color","this","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc41d549.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nlet Footer = () => {\r\n    return (\r\n        <div>\r\n            <p>coded and written by{' '}\r\n                <a \r\n                href=\"https://github.com/emilekanaan\" \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\"\r\n                \r\n                >\r\n                    Emile Kanaan\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","\nimport './App.scss';\nimport React from 'react';\n\nimport Footer from './Footer.js';\n\nlet i = 0;\nclass App extends React.Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      api: [],\n      quote: '',\n      author: '',\n      previousQuotes: []\n    }\n  }\n  \n  getPreviousQuote = () => {\n    if(i !== 0 && this.state.previousQuotes.length !== 0) {\n      i--;\n      this.setState(prevState => {\n       return {\n         quote: prevState.previousQuotes[i].quote,\n         author: prevState.previousQuotes[i].author,\n         previousQuotes: prevState.previousQuotes.slice(0, i + 1)\n       }\n      })\n    } \n  }\n\n  getNewQuote = () => {\n    const random = Math.floor(Math.random() * this.state.api.length);\n    this.setState(prevState => {\n      return {\n        quote: prevState.api[random].text,\n        author: prevState.api[random].author,\n      }\n    })\n    this.setNewQuote()\n  }\n\n  setNewQuote = () => {\n    i++;\n    this.setState(prevState => {\n      return {\n        previousQuotes: prevState.previousQuotes.concat({\n          quote: prevState.quote,\n          author: prevState.author\n        })\n      }\n    })\n  }\n  \n  twitterPostURL = () => {\n    let { quote, author } = this.state;\n    return 'https://twitter.com/intent/tweet?text=' + encodeURIComponent('\"' + quote + '\" ' + author)\n  }\n\n  tumblrPostURL = () => {\n    let { quote, author } = this.state;\n    return (\n    'https://www.tumblr.com/widgets/share/tool?posttype=quote&caption=' \n    + encodeURIComponent(author) \n    + '&content=' \n    + encodeURIComponent('\"' + quote + '\"\"')\n    + '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'\n    )\n  }\n\n  componentDidMount() {\n    fetch('https://type.fit/api/quotes')\n      .then(a => a.json())\n      .then(data => {\n        const random = Math.floor(Math.random() * data.length);\n        this.setState(prevState => {\n\n          return {\n            api: data,\n            quote: [data[random].text],\n            author: [data[random].author],\n            previousQuotes: prevState.previousQuotes.concat({\n              quote: [data[random].text],\n              author: [data[random].author]\n            })\n          }\n        })\n      })\n  }\n\n  render() {\n      return (\n        <div>\n        <div className=\"App container\" >\n          <div className='row align-items-center'>\n            <div id='quote-box' className='col'>\n              <br />\n              <hr style={{color: 'red'}} />            \n              {(this.state.api.length === 0) ?\n                  <div>\n                  <h1 className='text-center'>Loading...</h1>\n                  <p className='text-center'>please wait</p>\n                  </div>\n                  :\n                  <div>\n                  <q id='text' className='text-center'><strong>{this.state.quote}</strong></q>\n                  <p id='author' className='text-center'><em>~ {this.state.author ? this.state.author : 'Unknown'} ~</em></p>\n                  </div>\n                  }\n                <div className='row justify-content-center'>\n                  <div className='col-2'>\n                    <a \n                      href={this.twitterPostURL()} \n                      className='btn btn-primary' \n                      rel=\"noreferrer\" \n                      id='tweet-quote' \n                      target='_blank' \n                      onClick={this.twitterPostURL}                     \n                    >\n                      <i className=\"fab fa-twitter\"></i>\n                    </a> \n                  </div>\n\n                  <div className='col-2'>\n                    <a \n                      href={this.tumblrPostURL()} \n                      className='btn btn-primary' \n                      rel=\"noreferrer\" \n                      id='tumblr-quote' \n                      target='_blank'\n                      onClick={this.tumblrPostURL}\n                    >\n                      <i className=\"fab fa-tumblr\"></i> \n                    </a> \n                  </div>\n                  <div className='col'></div>\n                  <div className='col-4'>\n                    <button id='previous-quote' className='btn btn-primary' onClick={this.getPreviousQuote}>Previous quote</button>\n                  </div>\n                  <div className='col-3'>\n                    <button id='new-quote' className='btn btn-primary' onClick={this.getNewQuote}>New quote</button>\n                  </div>\n                  \n                </div>\n              <hr style={{color: 'red'}}/>\n              <br />\n            </div>\n          </div>  \n        </div>\n        <Footer />\n        </div>\n      );\n  }  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}